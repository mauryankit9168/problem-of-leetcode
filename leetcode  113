/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left),
 * right(right) {}
 * };
 */
class Solution {
public:
    void pathSumHelper(TreeNode* root, int targ, int sum, vector<int>& ans,
                       vector<vector<int>>& result) {
        if (root == nullptr)
            return;
        ans.push_back(root->val);
        sum += root->val;
        if (!root->left && !root->right && sum == targ)
            result.push_back(ans);
        else {
            pathSumHelper(root->left, targ, sum, ans, result);
            pathSumHelper(root->right, targ, sum, ans, result);
        }
        ans.pop_back(); // backtrack
    }
    vector<vector<int>> pathSum(TreeNode* root, int targ) {
        vector<vector<int>> result;
        vector<int> ans;
        pathSumHelper(root, targ, 0, ans, result);
        return result;
    }
};
