class Solution {
public:
    vector<int> mergeHelper(vector<vector<int>>& arr, int i,
                            vector<vector<int>>& ans, vector<int> current) {
        if (i == arr.size()) {
            return current;      
        }
        if (arr[i][0] <= current[1]) {
            current[1] = max(current[1], arr[i][1]);    // [[1,3],[2,6],[8,10]]  current={1,3}  ,current[1]=3 , arr[i][0]=2, current[1]=max(3,6) which is 6
        } else {
            ans.push_back(current);                          //push [1,6]
            current = arr[i];        // update current      //current=[1,6]
        }
        return mergeHelper(arr, i + 1, ans, current);   
    }
    vector<vector<int>> merge(vector<vector<int>>& interval) {
        vector<vector<int>> ans;
        sort(interval.begin(), interval.end());
        vector<int> curr = interval[0];
        curr = mergeHelper(interval, 1, ans, curr);   
        ans.push_back(curr);
        return ans;
    }
};
